---
layout: project
tab: docs
---
- page.title = "#{page.product_name} #{page.build_info.version}"
- component_ids = page.component_news.keys.sort{|x,y| site.components.keys.index(x) <=> site.components.keys.index(y)}

- if is_stable_version(page.build_info.version)
  -# Banner for .Final versions (it's an aggregate of non-.Final pages)
  - related_whatsnew_pages = get_related_whatsnew_pages(site, page.build_info.product_id, page.build_info.version, true)
  - unless related_whatsnew_pages.empty? || related_whatsnew_pages.length == 1
    .row-fluid
      .span12.alert.alert-info><
        %span><= "This is a summary page of all New & Noteworthy for #{page.product_name}&#32; "
        -# reverse sort so new shown before old
        - related_whatsnew_pages.keys.sort{|y,x| x <=> y}.each_with_index do |version, index|
          - if index == related_whatsnew_pages.length - 1
            %span><= " &#32;and&#32; "
          %a{:href=>related_whatsnew_pages[version].output_path}><= version
          - if index < related_whatsnew_pages.length - 2
            %span><= ",&#32; "
- else
  -# Banner for non-.Final version pages which are related a an existing .Final version page
  - final_whatsnew_page = get_stable_version_whatsnew_page(site, page.build_info.product_id, page.build_info.version)
  - unless final_whatsnew_page.nil?
    .row-fluid
      .span12.alert.alert-warning><
        %span><= "This is the archived New & Noteworthy page that is also part of #{page.product_name}&nbsp;"
        %a{:href=>final_whatsnew_page.output_path}><= final_whatsnew_page.build_info.version


.row-fluid.affixedContent
  .span3.bs-docs-sidebar
    %ul.nav.nav-list.bs-docs-sidenav
      -# puts " #{page.build_info.product_id} #{page.build_info.version} archived: #{page.build_info.archived}"
      - whatsnew_pages = get_active_whatsnew_pages(site, page.build_info.product_id, page.build_info.version)
      -# sorting active versions in reverse order
      - whatsnew_pages.sort{|x,y| y.build_info.version <=> x.build_info.version}.each_with_index do |whatsnew_page, index|
        %li{:class=>("selected expanded" if whatsnew_page.build_info.version == page.build_info.version)}
          %a{:href=>relative(whatsnew_page.output_path)}
            #{whatsnew_page.build_info.version}
            - if ! whatsnew_page.build_info.build_type_label.nil?
              %span.visible-desktop.visible-phone{:class=>"label label_#{whatsnew_page.build_info.build_type_label}"}
                #{site.labels[whatsnew_page.build_info.build_type_label]}
            - if (whatsnew_page.build_info.archived == true)
              %span.visible-desktop.visible-phone{:class=>"label label_archived"}
                Archived
          - if whatsnew_page.build_info.version == page.build_info.version
            %ul.nav.nav-nested.components
              - component_ids.each_with_index do |component_id, index|
                %li.component{:class=>(index == 0 ? "active" : "")}
                  %a{:href=>"##{component_id}"} #{site.components[component_id].name}
          - if index < (whatsnew_pages.length - 1)
            %li.separator
      -# link to older N&N
      %li
        %a{:href=>"http://docs.jboss.org/tools/whatsnew/"} Older Versions


  .span9.whatsnew.scrolledContent.well.post-bg
    %header
      %h1.center What's New in #{page.product_name} #{page.build_info.version}
      - download_page = site.download_pages[page.build_info.product_id][page.build_info.version]
      - if download_page.nil? && page.build_type == :unreleased then
        - download_page = site.latest_builds_download_pages[page.build_info.product_id][:nightly]
      .center
        -# Blog announcement
        - unless download_page.nil? || download_page.build_info.blog_announcement_url.nil?
          %a{:href=>relative(page.build_info.blog_announcement_url)} Blog Announcement
          &#124;
        - unless download_page.nil?
          %a{:href => relative(download_page.output_path)} Download
          &#124;
        -# devstudio has Release Notes
        - unless download_page.nil? || download_page.build_info.release_notes_url.nil?
          %a{:href=>relative(page.build_info.release_notes_url)} Release Notes
          &#124;
        %a{:href=>relative("/downloads/installation.html")} Installation Instructions


    - default_imagesdir = site.asciidoctor.attributes['imagesdir']
    - if is_stable_version(page.build_info.version) then
      - site.asciidoctor.attributes['finalnn'] = true

    - component_ids.each do |component_id|
      - component_news = page.component_news[component_id]
      %div.component-wrapper{:id=>component_id}
        %h1.component-header #{site.components[component_id].name}
        - component_news.each do |n|
          - site.asciidoctor.attributes['imagesdir'] = Pathname.new(n.output_path).parent.to_s
          ~n.content
      %hr
    -# restore the default 'imagesdir'
    - site.asciidoctor.attributes['imagesdir'] = default_imagesdir
    -# unset the 'finalnn' attribute (used to exclude some version specific content)
    - site.asciidoctor.attributes['finalnn'] = null
