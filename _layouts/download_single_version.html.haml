---
layout: project
tab: downloads
---

- labels = {:stable=>"Stable", :development=>"Development", :nightly=>"Nightly"}
.row-fluid
  .span3.sidebar
    %ul.nav.nav-list
      - site.download_perma_links[page.product].each do |eclipse_builds| 
        %li.nav-header 
          #{site.products[:eclipse][eclipse_builds[0]].full_name}
        - eclipse_builds[1].each do |build_type, download_page|
          %li{:class=>("active" if download_page.build_info == page.build_info)}
            %a{:href=>relative(download_page.output_path)}
              %span
                #{download_page.build_info.version}
              %span{:class=>"label label_#{build_type}"}
                #{labels[build_type]}
      %li.divider          
      %li.nav-header All Versions
      %li
        %a{:href=>relative(site.all_versions_download_pages[page.product].output_path)}
          %span
            All Versions
  .span9
    %h2.center
      #{page.build_info.name} #{page.build_info.version}
      %span#displayed-version{:class=>"label label_#{page.build_info.build_type}"}
        #{labels[page.build_info.build_type]}
    .center
      %a Requirements
      &#124;
      %a What's New
      &#124;
      %a Release Note
    
    - if page.build_info.build_type == :stable
      .alert.alert-success
        #{page.build_info.name} #{page.build_info.version} was released on #{page.build_info.release_date}. 
        - if page.build_info.blog_announcement_url
          -puts "page.build_info.blog_announcement_url=" + page.build_info.blog_announcement_url.to_s
          Read the
          %a{:href=>relative(page.build_info.blog_announcement_url)} announcement on our blog
          to know more about it.
    - elsif page.build_info.build_type == :development
      .alert.alert-info
        %strong Development builds
        are have received basic testing, but are not considered fully stable yet.
    - elsif page.build_info.build_type == :nightly
      .alert.alert-warning
        %strong Warning! 
        Installing 
        %strong nightly builds
        might result in black holes being created !

    #installation_tabs.tabbable
      %ul.nav.nav-tabs
        %li{:id=>"marketplace_tab"}
          %a{:href=>"#marketplace", :"data-toggle"=>"tab"}
            Eclipse Marketplace
        %li{:id=>"update_site_tab"}
          %a{:href=>"#update_site", :"data-toggle"=>"tab"}
            Update Site
        %li{:id=>"zips_tab"}
          %a{:href=>"#zips", :"data-toggle"=>"tab"}
            Update Site Zip
    #installation-tabs-content.tab-content     
      - unless page.build_info.marketplace_url.nil? 
        -# use markdown or asciidoc instead 
        .tab-pane{:id=>"marketplace"}
          %p
            Drag and drop the 
            %a{:href=>page.build_info.marketplace_install_url, :title=>"Install"}
              %img{:src=>relative("/images/tools/installbutton.png"), :alt=>"Drag and drop this button into a running #{eclipse_name} workspace to install #{page.build_info.name}", :height=>"25", :width=>"63"}
            icon on your active
            %strong< #{page.build_info.eclipse_version.full_name} 
            workspace, or alternatively, search for &quot;
            %strong> #{page.build_info.name} (#{page.build_info.eclipse_version.short_name})
            &quot; in Eclipse via:
            %blockquote 
              Help > Eclipse Marketplace...
          %p
            You can also view the installation page on the&nbsp
            %a{:href=>page.build_info.marketplace_url, :title=>"Eclipse Marketplace"}> Eclipse Marketplace
            \.
    
      -# Update site
      - unless page.build_info.update_site_url.nil?
        - puts "page.build_info.update_site_url=" + page.build_info.update_site_url.to_s
        .tab-pane{:id=>"update_site"}
          :markdown
            Add the following URL to your **#{page.build_info.eclipse_version.full_name}** workspace: [ #{page.build_info.update_site_url.to_s} ]( #{page.build_info.update_site_url.to_s} )
            via 

            > Help > Install New Software...

            then select the individual features that you want to install.
    
      -# Update Site Zips
      - unless page.build_info.zips.nil?
        .tab-pane{:id=>"zips"}
          :markdown
            You can download Update Zips (Archived p2 Repos) for offline installation of **#{page.build_info.name}**, but **DO NOT UNPACK THEM** into your Eclipse root or dropins folder!
            Next, install into Eclipse using

            > Help > Install New Software... > Add... > Archive...

            and point to the archive you downloaded from the tables below, depending on the features of JBoss Tools you want to use.

          %table.center
            %tr
              %th<Name
              %th<Size
              %th<Links
            - page.build_info.zips.each do |zip|
              %tr
                %td #{zip.name}  
                %td.right #{zip.download_size}              
                %td 
                  - if zip.url.end_with? "zip"
                    %a{:href=>zip.url} zip
                  - if zip.url.end_with? "html"
                    %a{:href=>zip.url} html
                  - if zip.md5_url?
                    (
                    %a{:href=>zip.md5_url}> md5
                    )
            
-# modal dialog to display requirements
-#
  #requirements-modal.modal.hide.fade{:tabindex=>"-1", :role=>"dialog", :"aria-labelledby"=>"myModalLabel", :"aria-hidden"=>"true"}
    .modal-header
      %button.close{:type=>"button", :"data-dismiss"=>"modal", :"aria-hidden"=>"true"} x
      %h3#myModalLabel #{page.build_info.name} #{page.build_info.version} Requirements
    .modal-body
      %p 
        #{page.build_info.name} #{page.build_info.version} runs on Windows, MacOSX and Linux and requires 
        %a{:href=>page.build_info.eclipse_download}
          #{page.build_info.eclipse_version.full_name}.
    .modal-footer
      %button.btn{:"data-dismiss"=>"modal", :"aria-hidden"=>"true"} Close
    
-# Placed at the end of the document so the pages load faster
:javascript
  $(document).ready(function () {
    #{init_download_tab_states(page.build_info)}
    
  });  