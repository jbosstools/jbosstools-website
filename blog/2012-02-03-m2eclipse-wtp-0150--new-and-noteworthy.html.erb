---
title: 'm2e(clipse)-wtp 0.15.0 : New and Noteworthy'
author: 'Max Rydahl Andersen'
layout: blog-post
tags: [ jbosstools, eclipse, maven, wtp, helios, m2e, server_adapter, indigo, m2e-wtp, jbosscentral, exclusion_patterns ]
orignallink: ''
---
<body>
<div class="jive-rendered-content">
<p>Maven Integration for Eclipse WTP 0.15.0, a.k.a m2eclipse-wtp, a.k.a m2e-wtp is available.</p>
<p>This release contains mostly bug fixes, but a few improvements managed to slip in. The complete release notes are available <a class="jive-link-external-small" href="https://issues.sonatype.org/secure/ReleaseNote.jspa?projectId=10310&amp;version=11420">here</a>.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p><span style="color: #ff0000;"><strong>Update 08/02/2012 : m2e-wtp 0.15.1 has been released to fix a<span style="color: #ff0000;"> <a class="jive-link-external-small" href="https://issues.sonatype.org/browse/MECLIPSEWTP-226">build related issue</a></span>, but is strictly identical to 0.15.0 in terms of code/features</strong></span></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>m2e-wtp 0.15.0 is compatible with the JavaEE distributions of Eclipse Helios and Indigo, requires at least m2e 1.0 (works with 1.1) and mavenarchiver plugin &gt;= 0.14.0 (0.15.0 should be automatically installed).</p>
<p>As usual, m2e-wtp can be installed from :</p>
<p><span style="color: #555555; font-size: 12px; font-family: 'Lucida Sans', 'Lucida Sans Unicode', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif;"><br></span></p>
<ul>
<li>the Maven Discovery mechanism, for new installations : Window &gt; Preferences &gt; Maven &gt; Discovery &gt; Open catalog</li>
<li>the <a class="jive-link-external-small" href="http://marketplace.eclipse.org/content/maven-integration-eclipse-wtp" style="color: #355491;">Eclipse Marketplace</a> : Help &gt; Eclipse Marketplace</li>
<li>the update site : <strong><a class="jive-link-external-small" href="http://download.jboss.org/jbosstools/updates/m2eclipse-wtp/" style="color: #355491;">http://download.jboss.org/jbosstools/updates/m2eclipse-wtp/</a></strong>
</li>
</ul>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>So let's see what are the highlights of this new release :</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h3><span style="color: #666699;">Packaging inclusion/exclusion support improvements</span></h3>
<p>For war project, previous m2e-wtp versions used to use &lt;packagingIncludes&gt; and &lt;packagingExcludes&gt; attributes from the maven-war-plugin config to enable (or not) the deployment of project dependencies to WTP servers. In 0.15.0, the same level of support has been added to EAR projects using maven-ear-plugin 2.7+. However, the problem with this approach is, other resources (web pages, classes ...) are not properly excluded (using the &lt;*SourceInclude&gt; and &lt;*SourceExclude&gt; attributes). </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>In order to address this problem, <a class="jive-link-profile-small" href="https://community.jboss.org/people/rob.stryker">Rob Stryker</a>, committer on WTP and lead of JBoss AS tooling in JBoss Tools, provided an implementation for JBoss AS servers that might be generalized to other WTP server adapters (if they decide to do so). Basically, some new metadata is added to the project's .settings/org.eclipse.wst.common.component like : </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<!--[CodeBlockStart:565766d2-a557-446d-bcbe-7f54c9e32de5]--><pre class="jive-pre"><code class="jive-code jive-xml"><span class="jive-xml-tag">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="jive-xml-tag">&lt;project-modules id="moduleCoreId" project-version="1.5.0"&gt;</span>
&#160;&#160;&#160; <span class="jive-xml-tag">&lt;wb-module deploy-name="webOrEar"&gt;</span>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ...
&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span class="jive-xml-tag">&lt;property name="component.inclusion.patterns" value="pattern1,pattern2"/&gt;</span>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span class="jive-xml-tag">&lt;property name="component.exclusion.patterns" value="pattern3,pattern4"/&gt;</span>
&#160;&#160;&#160; <span class="jive-xml-tag">&lt;/wb-module&gt;</span>
<span class="jive-xml-tag">&lt;/project-modules&gt;</span>
</code></pre>
<!--[CodeBlockEnd:565766d2-a557-446d-bcbe-7f54c9e32de5]--><p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>The patterns are separated with a comma and exclusions take precedence over inclusions : resources matching one of the exclusion patterns are not deployed, even if they match one of the inclusion patterns. That solution is not maven-bound so any other kind of project can benefit from it.</p>
<p>Now all m2e-wtp 0.15.0 does is map the maven patterns to their equivalent component metadata. This gives : </p>
<p><a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4510-17915/component_patterns.png"><img alt="component_patterns.png" class="jive-image-thumbnail jive-image" height="209" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4510-17915/450-209/component_patterns.png" width="450"></a></p>
<p>In the example above, a warning is displayed as both &lt;warSourceIncludes&gt; and &lt;packagingIncludes&gt; are defined. Since both patterns could overlap, it might lead to some weird behavior where WTP would actually deploy more files than a maven CLI build. In order to minimize (we can not totally solve) that potential discrepancy we only keep the packaging patterns in the component files and recommend using &lt;packagingIncludes&gt; only. </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Currently, this feature only works in combination with the JBoss AS Tools from JBoss Tools 3.3.0.Beta1 (nightly builds available from<a class="jive-link-external-small" href="http://download.jboss.org/jbosstools/updates/nightly/trunk/"> http://download.jboss.org/jbosstools/updates/nightly/trunk/</a>), but we'll try to make other WTP Server adapter vendors support it in the future (as part of WTP core API).</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h3><span style="color: #666699;">Warnings added when unsupported dependency types are detected</span></h3>
<p>As of today, if a project depends on another workspace project of type ejb-client or test-jar,&#160; that specific dependency will not be packaged properly by WTP, as Maven would do in command line. Moreover, you'll experience some class leakage on the compilation and test classpaths in Eclipse (ex: non client classes being visible). The only known workarounds to this issue are to disable workspace resolution, or close the dependent project and rely on the dependencies from the local maven repository.</p>
<p>Ideally, in order to make the deployment part work, we would need to introduce new WTP components, but the current WTP API <a class="jive-link-external-small" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=330894">doesn't support it, yet</a>. So, until this is fixed, warning markers are added whenever a project depends on such "unsupported" types. That should hopefully give users an idea of the problem and how to circumvent it. </p>
<p><a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4510-17913/unsupported-dependency-type.png"><img alt="unsupported-dependency-type.png" class="jive-image-thumbnail jive-image" height="267" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4510-17913/450-267/unsupported-dependency-type.png" width="450"></a></p>
<h3><span style="color: #666699;">Better handling of dependencies in war projects</span></h3>
<p>Previous m2e-wtp versions had, in some use cases, some outstanding issues with regard to dependency management of war projects. In particular, </p>
<ul>
<li>when 2 dependencies of the same artifact, but having a different classifier were added to a web project, only one would show up on the classpath. This has been properly fixed.</li>
<li>in some cases, the timestamped version of a SNAPSHOT dependencies from the local repository, would be copied under the target/ folder, causing some jar locking issues in windows. The rationale behind this behavior is, maven-war-plugin packages snapshot dependencies using the timestamp identifier. Since the name of file in the maven classpath library needs to match the one deployed by WTP, a copy was performed. To fix this problem, the default file pattern matching used for dependency deployment has been changed to @{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@. This means that, by default in m2e-wtp, SNAPSHOT dependencies are now deployed using the SNAPSHOT suffix instead of the timestamp. If you need to force the use of timestamped artifacts, then you need to explicitely decalre the following in your pom.xml :</li>
</ul>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<!--[CodeBlockStart:2cd5cdf3-d3f2-412a-b6be-d4808316fe32]--><pre class="jive-pre"><code class="jive-code jive-xml"><span class="jive-xml-tag">&lt;plugin&gt;</span>
&#160; <span class="jive-xml-tag">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="jive-xml-tag">&lt;/groupId&gt;</span>
&#160; <span class="jive-xml-tag">&lt;artifactId&gt;</span>maven-war-plugin<span class="jive-xml-tag">&lt;/artifactId&gt;</span>
&#160; <span class="jive-xml-tag">&lt;version&gt;</span>2.2<span class="jive-xml-tag">&lt;/version&gt;</span>
&#160; <span class="jive-xml-tag">&lt;configuration&gt;</span>
&#160;&#160;&#160; <span class="jive-xml-tag">&lt;outputFileNameMapping&gt;</span>@{artifactId}@-@{version}@@{dashClassifier?}@.@{extension}@<span class="jive-xml-tag">&lt;/outputFileNameMapping&gt;</span>
&#160; <span class="jive-xml-tag">&lt;/configuration&gt;</span>
<span class="jive-xml-tag">&lt;/plugin&gt;</span>
</code></pre>
<!--[CodeBlockEnd:2cd5cdf3-d3f2-412a-b6be-d4808316fe32]--><p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h3><span style="color: #666699;">Removal of conflicting facets on packaging change<br></span></h3>
<p>If you had a java utility project, that you wanted to upgrade to an EJB project for example, a constraint violation would be raised upon project configuration update (EJB and Utility facets can't be both installed).</p>
<p>This has been fixed by removing all conflicting facets when you change the packaging of a Java EE project, making that conversion completely transparent.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h3><span style="color: #666699;">What's next?<br></span></h3>
<p>m2e 1.1 introduces a new Eclipse to Maven project <a class="jive-link-external-small" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=359340">conversion API</a>. It means that, in m2e-wtp.next, we will be able to automatically convert existing WTP project configuration to maven's. Dependencies will still need to be set/translated manually but that's a pretty good start IMHO. </p>
<h3><span style="color: #666699;"><br>Finally ...<br></span></h3>
<p>I would like to thank the m2e-wtp community at large for their support and contributions, that's what make this project move forward and make it <a class="jive-link-external-small" href="http://marketplace.eclipse.org/metrics/installs/last30days">one of the most popular projects</a> on the eclipse marketplace. </p>
<p>Contributions can take the form of : </p>
<ul>
<li>patches/pull requests (source is available on <a class="jive-link-external-small" href="https://github.com/sonatype/m2eclipse-wtp/">https://github.com/sonatype/m2eclipse-wtp/)</a>, as Laszlo Varadi did to<a class="jive-link-external-small" href="https://issues.sonatype.org/browse/MECLIPSEWTP-201"> fix some overlay issue in windows</a>, </li>
<li>bug reports (at <a class="jive-link-external-small" href="https://issues.sonatype.org/browse/MECLIPSEWTP">https://issues.sonatype.org/browse/MECLIPSEWTP</a>) </li>
<li>help on the documentation in the <a class="jive-link-external-small" href="https://github.com/sonatype/m2eclipse-wtp/wiki">wiki</a>.</li>
<li>answering questions on the <a class="jive-link-external-small" href="https://dev.eclipse.org/mailman/listinfo/m2e-users">m2e mailing list</a>
</li>
</ul>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Keep it up.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Fred.</p>
<p><a class="jive-link-external-small" href="https://twitter.com/#!/fbricon" target="_blank">https://twitter.com/#!/fbricon</a></p>
</div>
<!-- [DocumentBodyEnd:ccfb9f19-a243-441b-8d7c-18bf6bd19087] -->
</body>
