---
title: 'Excited about JBoss AS 7.1 Part III: Quickstarts Frenzy'
author: 'Max Rydahl Andersen'
layout: blog-post
tags: [ jbosstools, maven, jbosscentral, as7.1, quickstarts ]
orignallink: ''
---
<body>
<div class="jive-rendered-content">
<p>This is the last of a <a class="jive-link-blog-small" href="https://community.jboss.org/community/tools/blog/2012/02/27/jboss-as-71-is-out--what-am-i-excited-about">series</a> of <a class="jive-link-blog-small" href="https://community.jboss.org/community/tools/blog/2012/02/29/excited-about-jboss-as-71-part-ii-developer-friendly-security">blog</a> <a class="jive-link-blog-small" href="https://community.jboss.org/community/tools/blog/2012/02/28/excited-about-jboss-as-71-part-i-deployable-datasources">posts</a> covering three features I have had a personal interest in making it into AS 7.1 and the upcoming JBoss Enterprise Application Platform (EAP) 6.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Todays topic is about Quickstarts. </p>
<h2 id="quickstartfrenzy">Quickstart Frenzy</h2>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>The team doing AS Quickstarts have worked with the tools team on making sure all of the quickstarts have been developed, tested and verified to work nice and clean out of the box for developers - including making them equally <em>Just Work</em> no matter if you are using command line or when using them with an IDE such as <a class="jive-link-external-small" href="http://jboss.org/tools">JBoss Tools</a> and <a class="jive-link-external-small" href="http://devstudio.jboss.com/earlyacess">Developer Studio</a>.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This was even true with AS 7.0 and if you missed our recent <a class="jive-link-external-small" href="http://jboss.org/aerogear">AeroGear launch</a> you should go look since this Mobile/HTML5 driven project used the tools to show of AeroGear&#8217;s magic and one of the key drivers on making this so nice and clean was with the help of the Maven based quickstarts and the power of AS 7, OpenShift and well - kick ass tools if you ask me <img height="16px" src="https://community.jboss.org/4.5.6/images/emoticons/happy.gif" width="16px"></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>You will be seeing more of these things happening going forward when other projects gets upto speed with AS 7 and start to have a full experience on AS 7 together with Quickstarts that works well with tools.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Now back to the AS 7.1 quickstarts. The following is a listing of the curent quickstarts available for <a class="jive-link-external-small" href="http://www.jboss.org/jbossas/downloads/">download at jboss.org</a> </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<ul>
<li>bean-validation - Bean Validation, JPA</li>
<li>bmt - EJB, Programmatically control transactions</li>
<li>cdi-injection - CDI injections &amp; qualifiers + Servlet</li>
<li>cmt - EJB, how to use container managed transactions</li>
<li>ejb-in-ear - EJB + JSF, JAR and WAR deployed as EAR</li>
<li>ejb-in-war - EJB + JSF deployed as a war</li>
<li>ejb-remote - shows how to access EJBs remotely (EJB + JNDI)</li>
<li>forge-from-scratch - Forge</li>
<li>greeter - CDI + JSF + JPA + EJB + JTA</li>
<li>h2-console - H2 Database console</li>
<li>helloworld -Very basic CDI + Servlet</li>
<li>helloworld-gwt - GWT</li>
<li>helloworld-html5 - Very basic HTML5</li>
<li>helloworld-jms - JMS</li>
<li>helloworld-jsf - Very basic CDI + JSF</li>
<li>helloworld-mdb - Very basic JMS and MDBs</li>
<li>helloworld-osgi - OSGi</li>
<li>helloworld-rs - CDI + JAX-RS</li>
<li>helloworld-singleton - Singleton Session Bean</li>
<li>hibernate3 - Hibernate 3</li>
<li>hibernate4 - Hibernate 4</li>
<li>jts - Using JTS to coordinate distributed transactions</li>
<li>kitchensink - CDI + JSF + JPA + EJB + JPA + JAX-RS + BV</li>
<li>kitchensink-ear - kitchensink as an EAR archive</li>
<li>kitchensink-html5-mobile - kitchensink using HTML5, suitable for mobile and tablet computers</li>
<li>kitchensink-jsp - kitchensink converted to use JSP</li>
<li>log4j - JBoss Modules, Class loading, logging</li>
<li>numberguess - CDI + JSF</li>
<li>payment-cdi-event - CDI</li>
<li>servlet-async - CDI + Asynchronous Servlet + Asynchronous EJB</li>
<li>servlet-filterlistener - Servlet Filter and Listener</li>
<li>wsat-simple - Simple WS-AT JAX-WS Web service</li>
<li>wsba-coordinator-completion-simple - Simple WS-BA JAX-WS Web service with coordinator driven completion</li>
<li>wsba-participant-completion-simple - Simple WS-BA JAX-WS Web service with participant driven completion</li>
</ul>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>As you might notice the number of quickstarts have grown from 5 in AS 7.0 to 33 in AS 7.1.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>These quickstarts cover a broad range of technologies all setup to run on AS 7.1 and all follows more or less the same structure:</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<ul>
<li>contains a README.html/.md with explanation of what the example does</li>
<li>a pom.xml following good best practices when building projects that uses JEE &amp; JBoss API</li>
<li>is importable into JBoss Tools and Developer Studio</li>
</ul>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Mind you that because of the last two points (pom.xml + importable into tools) you should see that it is just as usable in other IDE&#8217;s that support import of Maven projects such as Netbeans, Intellij and others.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>That is the power of Maven - no matter how much we all love to complain about Maven&#8217;s shortcomings as a build tool, the fact it is prevalant, has all major dependencies available and works from both command line and IDE&#8217;s is a huge win.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h2 id="portabilitybetweencommunityandproduct">Migrating from Community and Product</h2>
<p>JBoss AS 7 and EAP 6 is the first release of JBoss which are built primarily with Maven. This change also makes it possible to finally easily use proper dependency managemment when building applications using JBoss AS 7 and EAP.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>We&#8217;ve even gone so far to make sure that it is easier to move from AS 7 to EAP 6 - for plain applications it should just be a matter to adjust the Bill-Of-Materials (BOM) POM used in your <code>&lt;dependencyManagement&gt;</code> section in your <code>pom.xml</code>.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>To do this presented a challenge since EAP 6 as the productized rebuilt version of AS 7 would get an overlap of Maven Group/Artifact/Version-identifiers (GAV) if not done properly. If you&#8217;ve used build systems with dependency management you know overlapping Maven GAV's presents a problem of possibly ambigious dependencies when doing builds. Especially with Maven which caches and stores all its artifacts in one location, namely <code>~/.m2/repository</code>. Imagine what happens if you first built against Maven central/JBoss.org repositories and then later used an EAP Maven repository where GAV were the same but the actual artifacts behind them were not. Such setup will be catastrophic for any software release, no matter if mission critical or just for fun. </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Therefore we have taken this into account and JBoss EAP build team ensures that no GAV &#8220;overlapping&#8221; occurs by adding the <code>-redhat-&lt;number&gt;</code> qualifier to anything that is part of an EAP based product such as JBoss EAP 6.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This ensures continuity for developers using AS 7 and wanting to test and go to production against EAP 6 and doing this change is illustrated well when looking at the difference between quickstarts in JBoss AS 7 and those bundled with EAP 6.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Here is a snippet from the dependency management part of AS 7.1 quickstart:</p>
<pre><code>&lt;dependency&gt;
&#160;&#160;&#160; &lt;groupId&gt;org.jboss.spec&lt;/groupId&gt;
&#160;&#160;&#160; &lt;artifactId&gt;jboss-javaee-6.0&lt;/artifactId&gt;
&#160;&#160;&#160; &lt;version&gt;3.0.0.Beta1&lt;/version&gt;
&#160;&#160;&#160; &lt;type&gt;pom&lt;/type&gt;
&#160;&#160;&#160; &lt;scope&gt;import&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
<p>And here is the same from an EAP 6 quickstart:</p>
<pre><code>&lt;dependency&gt;
&#160;&#160;&#160; &lt;groupId&gt;org.jboss.spec&lt;/groupId&gt;
&#160;&#160;&#160; &lt;artifactId&gt;jboss-javaee-6.0&lt;/artifactId&gt;
&#160;&#160;&#160; &lt;version&gt;3.0.0.Beta1-redhat-1&lt;/version&gt;
&#160;&#160;&#160; &lt;type&gt;pom&lt;/type&gt;
&#160;&#160;&#160; &lt;scope&gt;import&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
<p>Notice, the difference ? The only difference is &#8216;-redhat&#8211;1&#8217; in the version tag.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This small change ensures that your build now will use EAP 6 supported productized binaries instead of the community bits as long as you do not list the explicit version of your specific dependencies and let the BOM POM be the "manager" of the versions.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>It is a subtle difference with great potential.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This means that users applications can be built targeting community releases early on and when relevant start targeting productized versions with an easy change of the BOM. </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>And as a sideeffect it also becomes easy for you to try out experimental new features in future community releases of JBoss AS 7, 8, etc. by just picking the right version in the dependency management section.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Note: as productized versions stabilizes, gets security and bug fixes some differences will occur which might require some other changes but with the conventions of the <code>-redhat</code> qualifier and usage of so called Maven Bill-Of-Material(BOM)-pom&#8217;s it becomes easy migrate and there is a central place and format to outline the build differences that applies to you as a user of JBoss AS and EAP.</p>
<h2 id="jbosstoolsandquickstarts">JBoss Tools and Quickstarts</h2>
<p>There are two easy ways to get started with quickstarts from within JBoss Tools.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>The first one is simply to open JBoss Central and pick one of the Quickstarts listed in the project example section:</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4668-18064/jbosscentralquickstarts.png"><img alt="jbosscentralquickstarts.png" class="jive-image" height="270" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4668-18064/310-270/jbosscentralquickstarts.png" width="310"></a></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>When starting such example you get a short description plus option to download any missing plugins or server runtimes (such as AS 7.1).</p>
<p>Note: at time of writing the current M5 release of JBoss Tools targets AS 7.0, AS 7.1 will be targeted in upcoming JBoss Tools release.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4668-18065/projectexamplefirstpage.png"><img alt="projectexamplefirstpage.png" class="jive-image" height="305" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4668-18065/310-305/projectexamplefirstpage.png" width="310"></a></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This makes it easy to get started - the only thing you need is to download JBoss Tools or Developer Studio and it will help you get the remaining dependencies.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Alternatively if you prefer to download everything manually and have access to all quickstarts in on go then simply Download the quickstarts and use the &#8216;Existing Maven Projects&#8217; Import wizard.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4668-18066/mavenimport.png"><img alt="mavenimport.png" class="jive-image-thumbnail jive-image" height="450" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4668-18066/450-450/mavenimport.png" width="450"></a></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>In this wizard you can import a subset or all quickstarts as you see fit. After that JBoss Tools will with help of m2eclipse and m2e-wtp import the projects and you can start trying out JBoss AS 7 or EAP 6.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>And as a final touch if you target AS 7 the examples will be setup to use community binaries but if you target EAP 6 we will enable the <code>enterprise</code> flag for the archetypes which will make the created project target EAP productized binaries instead via the usage of the -redhat qualifiers instead. </p>
<h2 id="whatifidontwanttousemaven">What if I don&#8217;t want to use Maven ?</h2>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>For easy distribution of quickstarts and making sure it works in the many different environments users work in it is the best option available today.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>We do though understand and realize not everyone likes to use Maven for their projects and for this we&#8217;ve added a feature in JBoss Tools which allows you to convert a Maven Eclipse project to a &#8220;plain&#8221; Eclipse project.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>The feature is available via right click on any classpath library such as &#8220;Maven Dependencies&#8221; and is called &#8220;Materialize Library&#8221;</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4668-18067/materializelibrarymenu.png"><img alt="materializelibrarymenu.png" class="jive-image" height="145" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4668-18067/310-145/materializelibrarymenu.png" width="310"></a></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This feature materializes (i.e. copy) the Maven classpath libraries from being located in <code>~/.m2/repository</code> to a directory into your project + disabling the Maven Nature and thus you end up with a &#8220;Maven free&#8221; project.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4668-18068/materializelibrarydialog.png"><img alt="materializelibrarydialog.png" class="jive-image-thumbnail jive-image" height="386" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4668-18068/450-386/materializelibrarydialog.png" width="450"></a></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>This means you can use the Maven based quickstarts, import it, apply &#8220;Materialize Library&#8221; and end up with a project that has no dependency to Maven builds and you can create a build in your favorite alternative build tool.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Everybody wins. </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h2 id="theend">The End</h2>
<p>This brings to the end of my blog series concerning the main three features in AS 7 I get excited about: <a class="jive-link-blog-small" href="https://community.jboss.org/community/tools/blog/2012/02/28/excited-about-jboss-as-71-part-i-deployable-datasources">Deployable datasources</a>, <a class="jive-link-blog-small" href="https://community.jboss.org/community/tools/blog/2012/02/29/excited-about-jboss-as-71-part-ii-developer-friendly-security">Developer Friendly Security</a> and finally the Quickstart Frenzy.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Of course there are plenty of other features in AS 7.0 and 7.1 to get excited about, things like the ~1&#8211;4 second startup time, the scritable management API, domain multi node setup, unfied configuration files and more.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>But the ones that excites me this time around are the ones that I found to be most helpful for developers and makes tooling integration easier/better.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>I&#8217;ve told you what excites me in AS 7.1, now I would love to hear what feature of AS 7.1 excites you ?</p>
</div>
<!-- [DocumentBodyEnd:cef4d01d-6663-40b7-8101-72628f55c504] -->
</body>
