---
title: 'Excited about JBoss AS 7.1 Part I: Deployable Datasources'
author: 'Max Rydahl Andersen'
layout: blog-post
tags: [ eclipse, jboss_tools, datasources, jbosscentral ]
orignallink: ''
---
<body>
<div class="jive-rendered-content">
<p>I&#8217;m posting about three features which I have had a personal interest in making it into AS 7.1 and the upcoming JBoss Enterprise Application Platform (EAP) 6.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Today the topic is Deployable datasources.</p>
<h1 id="deployabledatasources">Deployable datasources</h1>
<p>Deployable file based datasources (named -ds.xml) have been a feature of JBoss for ages but in the redesign and release of AS 7.0 they did not make it in. Making it an unfortunate requirement for users to have their server running and use either the raw management API or the Admin Console to setup even the simplest datasource. You could do tricks like use <code>@DatasourceDefinition</code> annotations but it is not nice having to compile Java code to just wire up a datasource.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>AS 7.1 finally fixes this issue and brings back -ds.xml and even include support for deploying <a class="jive-link-external-small" href="https://github.com/jbossas/jboss-as/blob/master/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/messaging/xmldeployment/test-jms.xml">JMS destinations via a -jms.xml</a> file too, but that will be for another blog. </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>How does such a -ds.xml look like then ? Here is a simple one for a hsqldb running on localhost:</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;datasources xmlns="http://www.jboss.org/ironjacamar/schema"&gt;
&#160;&#160;&#160; &lt;datasource 
&#160;&#160;&#160;&#160;&#160;&#160;&#160; jndi-name="java:jboss/datasources/employeedb" 
&#160;&#160;&#160;&#160;&#160;&#160;&#160; enabled="true" 
&#160;&#160;&#160;&#160;&#160;&#160;&#160; use-java-context="true" pool-name="employeedb"&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;connection-url&gt;jdbc:hsqldb:hsql://localhost:1701&lt;/connection-url&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;driver&gt;hsqldb.jar&lt;/driver&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;pool&gt;&lt;/pool&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;security&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;user-name&gt;sa&lt;/user-name&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;password&gt;&lt;/password&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;/security&gt;
&#160;&#160;&#160; &lt;/datasource&gt;
&lt;/datasources&gt;
</code></pre>
<p>The XML tags does what you think it does - configure a datasource with the proper JDBC connection url, username, password and so forth.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>If you want to know all the details about this file format you can see the <a class="jive-link-external-small" href="http://docs.jboss.org/ironjacamar/userguide/1.0/en-US/html/deployment.html#deployingds_descriptor">IronJacamar documentation</a> for all the options available such as pool sizes.</p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p>Armed with this -ds.xml + a matching driver jar, which in this case is named <code>hsqldb.jar</code> you can copy the two files to the <code>deployments</code> folder of AS 7.1 and from then on the datasource named <code>java:jboss/datasources/employeedb</code> can be used by any application running on the server.</p>
<h2 id="creating-ds.xmlwithjbosstools">Creating -ds.xml with JBoss Tools</h2>
<p>I actually did not manually type up that -ds.xml file for my local running hsqldb database, nor did I manually deploy the driver.jar. I used a new wizard that are coming in JBoss Tools 3.3 Beta1 which takes the connection information I already have setup in Eclipse, create the right files for me and if I update the files it will also update the deployments.</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4662-18048/jbosstools_ds_wizard.png"><img alt="jbosstools_ds_wizard.png" class="jive-image" height="230" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4662-18048/310-230/jbosstools_ds_wizard.png" width="310"></a> </p>
<p>Once this wizard have run I simply right click the -ds.xml + driver.jar and select &#8216;Mark as Deployable&#8217; on them. This deploys them to my server and if I make changes to the -ds.xml the changes gets copied over directly and AS will pick up the changes shortly after.</p>
<p> <a href="https://community.jboss.org/servlet/JiveServlet/showImage/38-4662-18049/datasource_markasdeployable.png"><img alt="datasource_markasdeployable.png" class="jive-image" height="133" src="https://community.jboss.org/servlet/JiveServlet/downloadImage/38-4662-18049/310-133/datasource_markasdeployable.png" width="310"></a></p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<p class="p1">I find it exciting that we now not only have a file format for defining datasources, but also that they are separate deployable resources together with a driver jar which both can be easily shared on a team. </p>
<p style="min-height: 8pt; height: 8pt; padding: 0px;">&#160;</p>
<h2 id="thefineprint">The fine print</h2>
<p>A few caveats/tricks for this approach are:</p>
<ul>
<li>I prefer deploying datasources independent of my application, but you can put the -ds.xml inside your application META-INF or WEB-INF directory and it will be deployed together with the application.&#160; </li>
<li>The JDBC driver needs to be JDBC 4 compatible to be deployable out of the <code>deployment</code> directory. In the rare case your driver is not JDBC 4 compatible then you will need to deploy it as a module in AS 7.</li>
<li>The datasource can not be modified/managed via the Admin Console since it is a deployed resource and not part of the managed API of AS 7 - if you wish full admin control you will have to configure the datasource via the management API or admin console. As I understand it over time the admin console is set to include support for at least a read-only view of these file based datasources.</li>
<li>If you wanted to connect to a h2 database you would not need to copy the driver jar, but simply refer to <code>&lt;driver&gt;h2&lt;/driver&gt;</code> instead and you it pickup the default embedded h2 database driver in AS 7.</li>
</ul>
<h2 id="tomorrow">Tomorrow</h2>
<p>Tomorrow the topic is on how AS 7.1 is <a class="jive-link-blog-small" href="https://community.jboss.org/community/tools/blog/2012/02/29/excited-about-jboss-as-71-part-ii-developer-friendly-security">secured by default but is still developer friendly</a>.</p>
</div>
<!-- [DocumentBodyEnd:8eadac9c-30ba-4fec-80a8-6529a63d0c1f] -->
</body>
